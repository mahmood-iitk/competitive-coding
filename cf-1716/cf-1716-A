// Problem
You are standing at the point 0 on a coordinate line. Your goal is to reach the point 𝑛. In one minute, you can move by 2 or by 3 to the left or to the right (i. e., if your current coordinate is 𝑥, it can become 𝑥−3, 𝑥−2, 𝑥+2 or 𝑥+3). Note that the new coordinate can become negative.

Your task is to find the minimum number of minutes required to get from the point 0 to the point 𝑛.

You have to answer 𝑡 independent test cases.

//Input
The first line of the input contains one integer 𝑡 (1≤𝑡≤10^4) — the number of test cases. Then 𝑡 lines describing the test cases follow.

The 𝑖-th of these lines contains one integer 𝑛 (1≤𝑛≤10^9) — the goal of the 𝑖-th test case.

// Output

For each test case, print one integer — the minimum number of minutes required to get from the point 0
to the point 𝑛 for the corresponding test case.

// Example
// Input
4
1
3
4
12

// Output
2
1
2
4

// Solution
#include <bits/stdc++.h>

using namespace std;

int main() {
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    if (n == 1) {
      cout << 2 << endl;
      continue;
    }
    cout << (int)ceil(n/3.0) << endl;
  }
  return 0;
}
