// Problem
You are given a positive integer 𝑛.

The weight of a permutation 𝑝1,𝑝2,…,𝑝𝑛 is the number of indices 1≤𝑖≤𝑛 such that 𝑖 divides 𝑝𝑖. Find a permutation 𝑝1,𝑝2,…,𝑝𝑛 with the minimum possible weight (among all permutations of length 𝑛).

A permutation is an array consisting of 𝑛 distinct integers from 1 to 𝑛 in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array) and [1,3,4] is also not a permutation (𝑛=3 but there is 4 in the array).

// Input

Each test contains multiple test cases. The first line contains the number of test cases 𝑡 (1≤𝑡≤10^4). The description of the test cases follows.

The only line of each test case contains a single integer 𝑛 (1≤𝑛≤10^5) — the length of permutation.

It is guaranteed that the sum of 𝑛 over all test cases does not exceed 10^5.

// Output

For each test case, print a line containing 𝑛 integers 𝑝1,𝑝2,…,𝑝𝑛 so that the permutation 𝑝 has the minimum possible weight.

If there are several possible answers, you can print any of them.

// Example
// Input
2
1
4

// Output
1
2 1 4 3

// Solution
#include <bits/stdc++.h>

using namespace std;

int main() {
  int t;
  cin >> t;
  
  while (t--) {
    int n;
    cin >> n;
    
    for (int i = 2; i <= n; ++i) {
      cout << i << " ";
    }
    cout << 1 << endl;
  }
  
  return 0;
}
