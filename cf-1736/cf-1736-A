#=========Question=========
/*
You are given two arrays 𝑎 and 𝑏 of 𝑛 elements, each element is either 0 or 1.

You can make operations of 2 kinds.

Pick an index 𝑖 and change 𝑎𝑖 to 1−𝑎𝑖.
Rearrange the array 𝑎 however you want. 

Find the minimum number of operations required to make 𝑎 equal to 𝑏.
*/

#=========Solution=========

#include <bits/stdc++.h>

using namespace std;

int main() {
  int t;
  cin >> t;
  while (t--) {
    int n;
    cin >> n;
    
    vector<int> a(n);
    vector<int> b(n);
    
    for (int i = 0; i < n; ++i) {
      cin >> a[i]; 
    }

    for (int i = 0; i < n; ++i) {
      cin >> b[i]; 
    }

    int a_1 = 0;
    int b_1 = 0;
     
    for (int i = 0; i < n; ++i) {
      if (a[i] == 1) {
        a_1++;
      }
      if (b[i] == 1) {
        b_1++;
      }
    }
    
    int res;
    if (a_1 == b_1) {
      res = 0;
      for (int i = 0; i < n; ++i) {
        if (a[i] != b[i]) {
          res = 1;
          break;
        }
      }
      cout << res << endl;
      continue;
    }
    
    if (a_1 > b_1) {
      int changeable_ones = 0;
      for (int i = 0; i < n; ++i) {
        if (a[i] == 1) {
          if (b[i] == 0) {
            changeable_ones++;
          }
        }
      }
      if (changeable_ones == (a_1 - b_1)) {
        res = a_1 - b_1;
      } else {
        res = a_1 - b_1 + 1;
      }
      cout << res << endl;
      continue;
    }
    
    if (b_1 > a_1) {
      int changeable_ones = 0;
      for (int i = 0; i < n; ++i) {
        if (b[i] == 1) {
          if (a[i] == 0) {
            changeable_ones++;
          }
        }
      }
      if (changeable_ones == (b_1 - a_1)) {
        res = b_1 - a_1;
      } else {
        res = b_1 - a_1 + 1;
      }
      cout << res << endl;
      continue;
    }

  }
  
  
  return 0;
}

